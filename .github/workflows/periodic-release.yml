name: Periodic Release

on:
  schedule:
    # If the schedule stops working, see the docs: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule
    - cron: '0 0 * * 0' # Runs weekly at 00:00 on Sunday
  workflow_dispatch: # Allows manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ""
  TAG_MAJOR: ""
  TAG_MINOR: ""
  TAG_PATCH: ""
  TAG_LATEST: ""

permissions: read-all

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Get the latest tag version
        id: get_version
        run: |
          latest_version=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest Version: $latest_version"
          if [[ $latest_version =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            echo "Major: $major"
            minor=${BASH_REMATCH[2]}
            echo "Minor: $minor"
            patch=${BASH_REMATCH[3]}
            echo "Patch: $patch"
            
            new_patch=$((patch + 1))

            tag_major=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${major}
            tag_minor=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${major}.${minor}
            tag_patch=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${major}.${minor}.${new_patch}
            tag_latest=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            echo "TAG_MAJOR: $tag_major"
            echo "TAG_MAJOR=$tag_major" >> $GITHUB_ENV
            echo "TAG_MINOR: $tag_minor"
            echo "TAG_MINOR=$tag_minor" >> $GITHUB_ENV
            echo "TAG_PATCH: $tag_patch"
            echo "TAG_PATCH=$tag_patch" >> $GITHUB_ENV
            echo "TAG_LATEST: $tag_latest"
            echo "TAG_LATEST=$tag_latest" >> $GITHUB_ENV

            new_version="v${major}.${minor}.${new_patch}"
            echo "New Version: $new_version"
            echo "VERSION=$new_version" >> $GITHUB_ENV
            echo "tags from docker metadata: ${{ steps.meta.outputs.tags }}"
          else
            echo "Could not determine the latest tag version."
            exit 1
          fi

      # Docs: https://github.com/marketplace/actions/create-release
      # - name: 'Create Release'
      #   id: create_release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     body: "A Weekly release contianing upgrades to system packages in the base Rocker Linux container."
      #     makeLatest: true
      #     prerelease: false
      #     tag: ${{ env.VERSION }}

      # - name: Harden Runner
      #   uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      #   with:
      #     egress-policy: audit

      # - name: Log into registry
      #   uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
      #   with:
      #     push: true
      #     tags: ${{ env.TAG_MAJOR }},${{ env.TAG_MINOR }},${{ env.TAG_PATCH }},${{ env.TAG_LATEST }}
      #   env: 
      #     GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}